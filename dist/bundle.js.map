{"version":3,"sources":["webpack://rotm_v2/./src/extjs.js","webpack://rotm_v2/./src/rotm.did.js","webpack://rotm_v2/./src/main.js","webpack://rotm_v2/ignored|C:\\Users\\Stephen Andrews\\Documents\\GitHub\\rotm_v2\\node_modules\\@toruslabs\\eccrypto|crypto","webpack://rotm_v2/ignored|C:\\Users\\Stephen Andrews\\Documents\\GitHub\\rotm_v2\\node_modules\\bn.js\\lib|buffer","webpack://rotm_v2/ignored|C:\\Users\\Stephen Andrews\\Documents\\GitHub\\rotm_v2\\node_modules\\brorand|crypto","webpack://rotm_v2/ignored|C:\\Users\\Stephen Andrews\\Documents\\GitHub\\rotm_v2\\node_modules\\pump|fs","webpack://rotm_v2/ignored|C:\\Users\\Stephen Andrews\\Documents\\GitHub\\rotm_v2\\node_modules\\readable-stream\\lib\\internal\\streams|util","webpack://rotm_v2/ignored|C:\\Users\\Stephen Andrews\\Documents\\GitHub\\rotm_v2\\node_modules\\readable-stream\\lib|util","webpack://rotm_v2/ignored|C:\\Users\\Stephen Andrews\\Documents\\GitHub\\rotm_v2\\node_modules\\tweetnacl|crypto","webpack://rotm_v2/webpack/bootstrap","webpack://rotm_v2/webpack/runtime/amd options","webpack://rotm_v2/webpack/runtime/chunk loaded","webpack://rotm_v2/webpack/runtime/compat get default export","webpack://rotm_v2/webpack/runtime/define property getters","webpack://rotm_v2/webpack/runtime/global","webpack://rotm_v2/webpack/runtime/hasOwnProperty shorthand","webpack://rotm_v2/webpack/runtime/make namespace object","webpack://rotm_v2/webpack/runtime/node module decorator","webpack://rotm_v2/webpack/runtime/jsonp chunk loading","webpack://rotm_v2/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,6BAA6B,yCAAiB,OAAO,sCAAsC;AAC3F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,qBAAS;AAC/B;AACA;;AAEA;AACA;AACA;AACA,4CAAe,GAAG,E;;ACrEX,qBAAqB,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,4BAA4B,gDAAgD;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,2BAA2B,wCAAwC;AACnE,kCAAkC,qCAAqC;AACvE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACO,eAAe,MAAM,MAAM,WAAW,G;;;;;;;;;;;;;ACnGU;AACL;AACd;AACS;AAC7C;AACA,sBAAsB,yBAAS;AAC/B;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,QAAQ,aAAW,sCAAsC,UAAkB;AAC3E,eAAe,mDAAiB;AAChC;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA,uCAAuC,mBAAmB;AAC1D;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,mD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA,mD;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA,mD;AACA;AACA,sBAAsB,UAAU,oCAAoC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;AACP,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS,gB;AACT;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,4B;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,4B;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,aAAW,0EAA0E,UAAkB;AACrH;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,oDAA2B;;AAE9C,cAAc,aAAW,0EAA0E,UAAkB;AACrH;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,aAAW,0EAA0E,UAAkB;AAC3H;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oDAA2B;;AAElD,kBAAkB,aAAW,0EAA0E,UAAkB;AACzH;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,gC;AACA,WAAW;AACX;AACA;AACA;AACA,gBAAgB,aAAW,sCAAsC,UAAkB;AACnF;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,sBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,W;AACA;AACA,OAAO;AACP;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA,a;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,sBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA,W;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA,a;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS,E;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA,SAAS,E;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX,SAAS;AACT;;AAEA;;AAEA;AACA;AACA,OAAO,E;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,cAAc,WAAI,EAAE,iCAAiC;AACrD,eAAe,WAAI,EAAE,kCAAkC;AACvD,cAAc,WAAI,EAAE,iCAAiC;AACrD,aAAa,WAAI,EAAE,gCAAgC;AACnD,cAAc,WAAI,EAAE,iCAAiC;AACrD,eAAe,WAAI,EAAE,kCAAkC;AACvD,YAAY,WAAI,EAAE,+BAA+B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpwBA,e;;;;;;;ACAA,e;;;;;;;ACAA,e;;;;;;;ACAA,e;;;;;;;ACAA,e;;;;;;;ACAA,e;;;;;;;ACAA,e;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WC5BA,8B;;;;;WCAA;WACA;WACA;WACA;WACA,8BAA8B,wCAAwC;WACtE;WACA;WACA;WACA;WACA,gBAAgB,qBAAqB;WACrC;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,IAAI;WACJ;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,E;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA;WACA,CAAC,I;;;;;WCPD,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;WCNA;WACA;WACA;WACA;WACA,E;;;;;WCJA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,oBAAoB;WAC1B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA,4G;;;;;UC9CA;UACA;UACA;UACA;UACA","file":"bundle.js","sourcesContent":["/* global BigInt */\r\nimport { Actor, HttpAgent } from \"@dfinity/agent\";  \r\n\r\n//Preload IDLS against a common name\r\nconst _preloadedIdls = {\r\n\r\n};\r\n\r\nclass ExtConnection {\r\n  _mapIdls = {\r\n  };\r\n\r\n  _identity = false;\r\n  _host = false;\r\n  _agent = false;\r\n  _canisters = {};\r\n  \r\n  constructor(host, identity) {\r\n    if (identity) this._identity = identity;\r\n    if (host) this._host = host;\r\n    this._makeAgent();\r\n  }\r\n  idl(canister, idl) {\r\n    this._mapIdls[canister] = idl;\r\n    return this;\r\n  };\r\n  setIdentity(identity) {\r\n    if (identity) this._identity = identity;\r\n    else this._identity = false;\r\n    this._makeAgent();\r\n    return this;\r\n  }\r\n  setHost(host) {\r\n    if (host) this._host = host;\r\n    else this._host = false;\r\n    this._makeAgent();\r\n    return this;\r\n  }\r\n  canister(cid, idl) {\r\n    if (!idl){\r\n      if (this._mapIdls.hasOwnProperty(cid)) {\r\n        idl = this._mapIdls[cid];\r\n      } else {\r\n        throw new Error(idl + \" is not a preloaded IDL\");\r\n      }\r\n    } else if (typeof idl == 'string') {\r\n      if (_preloadedIdls.hasOwnProperty(idl)) {\r\n        idl = _preloadedIdls[idl];\r\n      } else {\r\n        throw new Error(idl + \" is not a preloaded IDL\");\r\n      }\r\n    }\r\n    if (!this._canisters.hasOwnProperty(cid)){\r\n      this._canisters[cid] = Actor.createActor(idl, {agent : this._agent, canisterId : cid});\r\n    }\r\n    return this._canisters[cid];\r\n  }\r\n\r\n  _makeAgent() {\r\n    var args = {};\r\n    if (this._identity) args['identity'] = this._identity;\r\n    if (this._host) args['host'] = this._host;\r\n    this._agent = new HttpAgent(args);\r\n  };\r\n};\r\n\r\nconst api = {\r\n  connect : (host, identity) => new ExtConnection(host ?? \"https://boundary.ic0.app/\", identity),\r\n};\r\nexport default api;","export const idlFactory = ({ IDL }) => {\n  const HexNeighbors = IDL.Tuple(\n    IDL.Opt(IDL.Nat),\n    IDL.Opt(IDL.Nat),\n    IDL.Opt(IDL.Nat),\n    IDL.Opt(IDL.Nat),\n    IDL.Opt(IDL.Nat),\n    IDL.Opt(IDL.Nat),\n  );\n  const BoardHex = IDL.Record({\n    'sides' : HexNeighbors,\n    'coords' : IDL.Tuple(IDL.Nat8, IDL.Nat8),\n  });\n  const Board = IDL.Record({ 'hexs' : IDL.Vec(BoardHex), 'name' : IDL.Text });\n  const BoardId = IDL.Nat32;\n  const MagniAttack = IDL.Tuple(\n    IDL.Nat8,\n    IDL.Nat8,\n    IDL.Nat8,\n    IDL.Nat8,\n    IDL.Nat8,\n  );\n  const Magni = IDL.Record({\n    'img' : IDL.Text,\n    'name' : IDL.Text,\n    'attack' : MagniAttack,\n  });\n  const MagniId = IDL.Nat32;\n  const MagniNFTId = IDL.Nat32;\n  const ItemId = IDL.Nat32;\n  const MagniNFT = IDL.Record({\n    'exp' : IDL.Nat32,\n    'magni' : MagniId,\n    'upgrades' : IDL.Vec(ItemId),\n    'transferrable' : IDL.Bool,\n  });\n  const GameHash = IDL.Text;\n  const OpponentId = IDL.Nat32;\n  const GameOption = IDL.Variant({\n    'pvp' : IDL.Tuple(BoardId, IDL.Opt(GameHash)),\n    'practice' : BoardId,\n    'opponent' : OpponentId,\n  });\n  const GameId = IDL.Nat32;\n  const GameScore = IDL.Tuple(IDL.Nat8, IDL.Nat8);\n  const GameResult = IDL.Variant({\n    'result' : IDL.Tuple(GameScore, IDL.Principal, IDL.Opt(IDL.Principal)),\n    'noresult' : IDL.Tuple(IDL.Principal, IDL.Opt(IDL.Principal), IDL.Text),\n  });\n  const GameStatus = IDL.Variant({\n    'lead' : IDL.Null,\n    'play' : IDL.Null,\n    'ended' : GameResult,\n    'lobby' : IDL.Null,\n  });\n  const GameState = IDL.Record({\n    'status' : GameStatus,\n    'moves' : IDL.Vec(IDL.Tuple(IDL.Nat, IDL.Tuple(MagniNFTId, MagniNFT))),\n    'option' : GameOption,\n    'lead' : IDL.Vec(MagniNFT),\n    'score' : GameScore,\n    'players' : IDL.Vec(IDL.Principal),\n    'isPlayer1' : IDL.Bool,\n    'board' : Board,\n  });\n  const Response = IDL.Variant({\n    'ok' : IDL.Tuple(GameId, GameState),\n    'err' : IDL.Text,\n  });\n  const Move = IDL.Record({ 'hex' : IDL.Nat, 'magni' : MagniNFTId });\n  const PlayerMove = IDL.Variant({ 'lead' : MagniNFTId, 'move' : Move });\n  const GameData = IDL.Record({\n    'magni' : IDL.Vec(IDL.Tuple(MagniId, Magni)),\n    'boards' : IDL.Vec(IDL.Tuple(BoardId, Board)),\n  });\n  return IDL.Service({\n    'addBoard' : IDL.Func([Board], [BoardId], []),\n    'addMagni' : IDL.Func([Magni], [MagniId], []),\n    'connect' : IDL.Func([], [IDL.Vec(IDL.Tuple(MagniNFTId, MagniNFT))], []),\n    'gameCreate' : IDL.Func([GameOption, IDL.Vec(MagniNFTId)], [Response], []),\n    'gameFetch' : IDL.Func([], [Response], []),\n    'gameFind' : IDL.Func([IDL.Vec(MagniNFTId)], [Response], []),\n    'gameJoin' : IDL.Func([GameHash, IDL.Vec(MagniNFTId)], [Response], []),\n    'gameLeave' : IDL.Func([GameId], [Response], []),\n    'gameMove' : IDL.Func([PlayerMove], [Response], []),\n    'gamePoll' : IDL.Func([GameId], [Response], ['query']),\n    'gameScore' : IDL.Func([GameId], [GameScore], ['query']),\n    'getAllPlayerMagnis' : IDL.Func(\n        [],\n        [IDL.Vec(IDL.Tuple(IDL.Principal, IDL.Vec(MagniNFTId)))],\n        ['query'],\n      ),\n    'getGameData' : IDL.Func([], [GameData], ['query']),\n    'getMyMagni' : IDL.Func(\n        [],\n        [IDL.Vec(IDL.Tuple(MagniNFTId, MagniNFT))],\n        ['query'],\n      ),\n    'whoami' : IDL.Func([], [IDL.Principal], ['query']),\n  });\n};\nexport const init = ({ IDL }) => { return []; };","import api from \"./extjs.js\";  \nimport * as rotmIDL from \"./rotm.did.js\";  \nimport { Ed25519KeyIdentity } from \"@dfinity/identity\";\nimport { AuthClient } from \"@dfinity/auth-client\";\nimport {Howl, Howler} from 'howler';\nimport OpenLogin from \"@toruslabs/openlogin\";\nvar AUTH, logintype;\nconst openlogin = new OpenLogin({\n  clientId: \"BHsvffJZzsm_Kb-xNOO9fGOZ2ciiMHlRjgBCeTRw18Io6OBE0QR4nd0R8AGZmL6wK9KFr9LbDeNNuj6yutSbTUA\",\n  network: \"mainnet\", // valid values (testnet or mainnet)\n  uxMode : 'popup',\n});\nshowLoader()\ndocument.addEventListener('DOMContentLoaded', async () => {\n  API = api.connect().idl('p5mob-qaaaa-aaaah-qaebq-cai', rotmIDL.idlFactory).canister('p5mob-qaaaa-aaaah-qaebq-cai');\n  AUTH = await AuthClient.create();\n  await openlogin.init();\n  var GD = await API.getGameData();\n  for(var i = 0; i < GD.magni.length; i++) {\n    CONFIG.magni.push([GD.magni[i][1].name].concat(GD.magni[i][1].attack));\n  };\n  for(var i = 0; i < GD.boards.length; i++) {\n    var _tb = [];\n    CONFIG.boards[GD.boards[i][1].name.toLowerCase()] = GD.boards[i][1].hexs.map(a => a.coords);\n  };\n  document.addEventListener('click', ({ offsetX, offsetY }) => {\n    if (typeof currentRoom.click != 'undefined'){\n      currentRoom.click(offsetX, offsetY);\n    }\n  });\n  hideLoader()\n  rooms.login.enter();\n});\nwindow.addEventListener(\"beforeunload\", function(e){\n   unloadROTM();\n}, false);\nwindow.onbeforeunload = unloadROTM;\nasync function unloadROTM(){\n  await ROTM.gameLeave();\n  return null;\n}\nwindow.addEventListener('blur', () => {\n  if (currentSound && !bgmuted) currentSound.mute(true);\n});\nwindow.addEventListener('focus', () => {\n  if (currentSound && !bgmuted) currentSound.mute(false);\n});\nconst updateGameState = (gs) => {\n  if (!ROTM._intv) return;\n  if (state == 'find') {\n    if (gs.status.hasOwnProperty('lead')) {\n      rooms.game.enter();\n      SOUND.alert.play();\n      ROTM._stopPolling();\n      state = 'busy';\n    };\n  }\n  if (state == 'busy') {\n    if (gs.status.hasOwnProperty('lead')) {\n      if (gameState == 1) { //We have submitted our lead\n        if (gs.lead.length == 0 || !gs.isPlayer1) {\n          //We need to resubmit ours\n          gameState = 0;\n          drawMessage(\"It was a tie - Choose another Strike Unit!\");\n          SOUND.alert.play();\n          selectedHex.unhighlight();\n          selectedHex = false;\n          ROTM._stopPolling();\n        } else {\n          //Waiting\n          //console.log(\"Waiting for opponent to choose their Strike Unit\");\n          //Keep polling\n        }\n      }\n    };\n    if (gs.status.hasOwnProperty('play')) {\n      if (gameState == 1) {\n        gameState = 2;\n        selectedHex.clear();\n        selectedHex = false;\n        if (gs.isPlayer1) {\n          currentPlayer = 1;\n          otherPlayer = 2;\n        } else {\n          otherPlayer = 1;\n          currentPlayer = 2;\n        }\n      }\n      if (gs.isPlayer1 && gs.moves.length % 2 == 0) {\n        isPlayersTurn = true;\n        ROTM._stopPolling();\n        SOUND.alert.play()\n        drawMessage(\"It is your turn now - Deploy a Magni!\");\n      } else if (!gs.isPlayer1 && gs.moves.length % 2 == 1) {\n        isPlayersTurn = true;\n        ROTM._stopPolling();\n        SOUND.alert.play()\n        drawMessage(\"It is your turn now - Deploy a Magni!\");\n      } else {\n        isPlayersTurn = false;\n      }\n    };\n    if (gs.status.hasOwnProperty('ended')) {\n      //state = 'free';\n      ROTM._stopPolling();\n      gameState = 3;\n      //console.log(gs.status.ended);\n      if (gs.status.ended.hasOwnProperty('noresult')) {\n        drawMessage(\"Game over - \"+gs.status.ended.noresult[2]+\"!\");       \n        rooms.game.backButton.show()       \n        SOUND.win.play()\n      } else if (gs.status.ended.hasOwnProperty('result')) {\n        drawMessage(\"Game over - you \"+scoreMsg()+\"!\");\n        if (scoreMsg() == \"won\") SOUND.win.play();\n        else SOUND.lose.play();\n        rooms.game.backButton.show()       \n      }\n      bgmusic();\n    };\n  };\n  if (gs.moves.length > movesMade) {\n    //console.log(\"Updating moves\");\n    for (var i = movesMade; i < gs.moves.length; i++) {\n      var p = (i%2 == 0 ? 1 : 2);\n      gamegrid[gs.moves[i][0]].isPlayerHex = (p == currentPlayer);\n      gamegrid[gs.moves[i][0]].place(p, gs.moves[i][1], (p == currentPlayer ? CONFIG.colors.ally : CONFIG.colors.enemy));\n      if (i >= 2) placeHex(gamegrid[gs.moves[i][0]]);\n    }\n    movesMade = gs.moves.length;\n  };\n  if (currentRoom == rooms.game) drawScore();\n};\n\nconst fromHexString = (hex) => {\n  if (hex.substr(0,2) === \"0x\") hex = hex.substr(2);\n  for (var bytes = [], c = 0; c < hex.length; c += 2)\n  bytes.push(parseInt(hex.substr(c, 2), 16));\n  return bytes;\n}\nconst ROTM = {\n  _gameState : false,\n  _gameId : false,\n  _intv : false,\n  _clearPolling : () => {\n    isPlayersTurn = false;\n    if (ROTM._intv) clearInterval(ROTM._intv);\n    ROTM._intv = false;\n  },\n  _stopPolling : () => {\n    if (ROTM._intv) clearInterval(ROTM._intv);\n    ROTM._intv = false;\n  },\n  _startPolling : () => {\n    ROTM._intv = setInterval(() => {\n      API.gamePoll(ROTM._gameId).then(r => {\n        //console.log(r);\n        if (r.hasOwnProperty(\"ok\")){\n          ROTM._gameState = r.ok[1];\n          updateGameState(ROTM._gameState);\n        } else {\n          console.log(r.err);\n        };\n      });\n    }, 1*1000);\n  },\n  inGame : () => {\n    if (!ROTM._gameState) return false;\n    if (ROTM._gameState.status.hasOwnProperty(\"#ended\")) return false;\n    return true;\n  },\n  /*\n  gameCreate : (roster, poll) => {\n    if (ROTM.inGame()) return;\n  },\n  gameJoin : async (roster, poll) => {\n    if (ROTM.inGame()) return;\n  },\n  */\n  gameFind : (roster, poll) => {\n    return new Promise(async (resolve, reject) => {    \n      if (ROTM.inGame()) reject(\"in game\");\n      var mids = roster.map(m => m[0]);\n      \n      API.gameFind(mids).then(resp => {\n        if (resp.hasOwnProperty('ok')) {\n          ROTM._gameId = resp.ok[0];\n          ROTM._gameState = resp.ok[1];\n          ROTM._startPolling();\n          updateGameState(ROTM._gameState);\n          resolve(ROTM._gameState);\n        } else {\n          reject(resp.err);\n        };\n      }).catch(reject);\n    });\n  },\n  gamePractise : (roster, poll) => {\n    return new Promise(async (resolve, reject) => {    \n      if (ROTM.inGame()) reject(\"in game\");\n      var mids = roster.map(m => m[0]);\n      \n      API.gameCreate({\n        practice : 0\n      }, mids).then(resp => {\n        if (resp.hasOwnProperty('ok')) {\n          ROTM._gameId = resp.ok[0];\n          ROTM._gameState = resp.ok[1];\n          ROTM._startPolling();\n          updateGameState(ROTM._gameState);\n          resolve(ROTM._gameState);\n        } else {\n          reject(resp.err);\n        };\n      }).catch(reject);\n    });\n  },\n  gameMove : async (magni, position) => {\n    return new Promise(async (resolve, reject) => {    \n      if (position) {\n        API.gameMove({\"move\" : { hex : position, magni : magni[0] }}).then(resp => {\n          //console.log(resp);\n          if (resp.hasOwnProperty('ok')) {\n            ROTM._gameState = resp.ok[1];\n            movesMade++;\n            ROTM._startPolling();\n            updateGameState(ROTM._gameState);\n            resolve(ROTM._gameState);\n          } else {\n            reject(resp.err);\n          };\n        }).catch(reject);\n      } else {\n        API.gameMove({\"lead\" : magni[0]}).then(resp => {\n          if (resp.hasOwnProperty('ok')) {\n            ROTM._gameState = resp.ok[1];\n            ROTM._startPolling();\n            updateGameState(ROTM._gameState);\n            resolve(ROTM._gameState);\n          } else {\n            reject(resp.err);\n          };\n        }).catch(reject);   \n      }\n    });\n  },\n  gameEnd : () => {\n    ROTM._clearPolling();\n    ROTM._gameId = false;\n    ROTM._gameState = false;    \n  },\n  gameLeave : async () => {\n    ROTM._clearPolling();\n    if (ROTM._gameId) await API.gameLeave(ROTM._gameId);\n    ROTM._gameId = false;\n    ROTM._gameState = false;    \n  },\n  connect : async () => {\n    mymagni = await API.connect();\n    //console.log(mymagni);\n  },\n  stats : async () => {\n  \n  },\n  gs : () => {\n    return ROTM._gameState;\n  }\n};\n\nvar rooms = {\n  login : {\n    draw : INNERDRAW.group(),\n    enter : async () => {\n      if (currentRoom) currentRoom.exit();\n      currentRoom = rooms.login;\n      currentRoom.draw.clear();\n      \n      showLoader();\n      var id = await AUTH.getIdentity();\n      if (id.getPrincipal().toString() != '2vxsx-fae') {\n        logintype = 'ii';\n        identity = id;\n        API = api.connect(\"https://boundary.ic0.app/\",identity).idl('p5mob-qaaaa-aaaah-qaebq-cai', rotmIDL.idlFactory).canister('p5mob-qaaaa-aaaah-qaebq-cai');\n        await ROTM.connect();\n        setTimeout(() => {\n          rooms.menu.enter();\n          bgmusic('lobby');\n        }, 200);\n      };\n      if (openlogin.privKey) {\n        logintype = 'openlogin';\n        identity = Ed25519KeyIdentity.generate(new Uint8Array(fromHexString(openlogin.privKey)));\n        \n        API = api.connect(\"https://boundary.ic0.app/\",identity).idl('p5mob-qaaaa-aaaah-qaebq-cai', rotmIDL.idlFactory).canister('p5mob-qaaaa-aaaah-qaebq-cai');\n        await ROTM.connect();\n        setTimeout(() => {\n          rooms.menu.enter();\n          bgmusic('lobby');\n        }, 200);\n      }\n      hideLoader();\n      setBackground('assets/bgs/menu.jpg');\n      createButton(500,500,200,40,'Internet Identity', async () => {\n        if (!identity) {\n          showLoader();\n          AUTH.login({\n            maxTimeToLive : BigInt(24*60*60*1000000000),\n            identityProvider: \"https://identity.ic0.app/\",\n            onSuccess: async () => {\n              logintype = 'ii';\n              identity = await AUTH.getIdentity()\n              \n              API = api.connect(\"https://boundary.ic0.app/\",identity).idl('p5mob-qaaaa-aaaah-qaebq-cai', rotmIDL.idlFactory).canister('p5mob-qaaaa-aaaah-qaebq-cai');\n              await ROTM.connect()\n              hideLoader();\n              rooms.menu.enter();\n              bgmusic('lobby');\n            },\n            onError : () => {\n              hideLoader();\n              alert(\"Error logging in...\");\n            }\n          });\n        }\n      });\n      createButton(500,560,200,40,'Open Login', async () => {\n        if (!identity) {\n          showLoader();\n          await openlogin.login();\n          if (openlogin.privKey) {\n            logintype = 'openlogin';\n            identity = Ed25519KeyIdentity.generate(new Uint8Array(fromHexString(openlogin.privKey)));\n            \n            API = api.connect(\"https://boundary.ic0.app/\",identity).idl('p5mob-qaaaa-aaaah-qaebq-cai', rotmIDL.idlFactory).canister('p5mob-qaaaa-aaaah-qaebq-cai');\n            await ROTM.connect()\n            hideLoader();\n            rooms.menu.enter();\n            bgmusic('lobby');\n          } else {\n            hideLoader();\n            alert(\"Error logging in...\");\n          }\n          \n        }\n      });\n      createButton(500,680,200,40,'Help', () => {\n        window.open('https://toniqlabs.gitbook.io/rise-of-the-magni/', '_blank').focus();\n      });\n    },\n    exit : () => {\n      currentRoom.draw.clear();\n    }\n  },\n  menu : {\n    draw : INNERDRAW.group(),\n    enter : () => {\n      if (currentRoom) currentRoom.exit();\n      currentRoom = rooms.menu;\n      currentRoom.draw.clear();\n      \n      setBackground('assets/bgs/menu.jpg');\n      createButton(500,500,200,40,'Adventure', () => {\n        alert(\"Sorry, not available yet...!\");\n        //setTimeout(() => rooms.lobby.enter(0), 100);\n      });\n      createButton(500,560,200,40,'Training', () => {\n        setTimeout(() => rooms.lobby.enter(1), 100);\n      });\n      createButton(500,620,200,40,'Online', () => {\n        setTimeout(() => rooms.lobby.enter(2), 100);\n      });\n      createButton(500,680,200,40,'Settings', () => {\n        setTimeout(() => rooms.settings.enter(), 100);\n      });\n      createButton(500,740,200,40,'Logout', () => {\n        setTimeout(async () => {\n          if (logintype == 'ii') {\n            await AUTH.logout();            \n          } else {\n            await openlogin.logout();\n          };\n          identity = false;\n          API = api.connect().idl('p5mob-qaaaa-aaaah-qaebq-cai', rotmIDL.idlFactory).canister('p5mob-qaaaa-aaaah-qaebq-cai');\n          rooms.login.enter()\n        }, 100);\n      });\n    },\n    exit : () => {\n      currentRoom.draw.clear();\n    }\n  },\n  settings : {\n    draw : INNERDRAW.group(),\n    enter : () => {\n      if (currentRoom) currentRoom.exit();\n      currentRoom = rooms.settings;\n      currentRoom.draw.clear();\n      \n      setBackground('assets/bgs/menu.jpg');\n      var msfx, umsfx, mbg, umbg; \n      msfx = createButton(500,500,200,40,'Mute SFX', () => {\n        SOUND.alert.mute(true);\n        SOUND.select.mute(true);\n        SOUND.place.mute(true);\n        SOUND.lose.mute(true);\n        SOUND.win.mute(true);\n        msfx.hide();\n        umsfx.show();\n        sfxmuted = true;\n      });\n      umsfx = createButton(500,500,200,40,'Unmute SFX', () => {\n        SOUND.alert.mute(false);\n        SOUND.select.mute(false);\n        SOUND.place.mute(false);\n        SOUND.lose.mute(false);\n        SOUND.win.mute(false);\n        umsfx.hide();\n        msfx.show();\n        sfxmuted = false;\n      });\n      if (sfxmuted) msfx.hide();\n      else umsfx.hide();\n      mbg = createButton(500,560,200,40,'Mute BG Music', () => {\n        bgmuted = true;\n        currentSound.mute(true)\n        mbg.hide();\n        umbg.show();\n      });\n      umbg = createButton(500,560,200,40,'Unmute BG Music', () => {\n        bgmuted = false;\n        currentSound.mute(false)\n        mbg.show();\n        umbg.hide();\n      });\n      if (bgmuted) mbg.hide();\n      else umbg.hide();\n      createButton(500,620,200,40,'Help', () => {\n        window.open('https://toniqlabs.gitbook.io/rise-of-the-magni/', '_blank').focus();\n      });\n      createButton(500,680,200,40,'Back', () => {\n        setTimeout(() => rooms.menu.enter(), 100);\n      });\n    },\n    exit : () => {\n      currentRoom.draw.clear();\n    }\n  },\n  adventure : {\n    draw : INNERDRAW.group(),\n    chapter : false,\n    stage : false,\n    scene : false,\n    clickHandler : false,\n    inAdventureMode : false,\n    enter : (c,s) => {\n      if (currentRoom) currentRoom.exit();\n      currentRoom = rooms.adventure;\n      if (rooms.adventure.inAdventureMode) {\n        currentRoom.draw.show();\n      } else {\n        rooms.adventure.inAdventureMode = true;\n        currentRoom.draw.clear();\n        \n        rooms.adventure.scene = currentRoom.draw.group();\n        \n        rooms.adventure.chapter = 0;\n        rooms.adventure.stage = 0;\n        \n        launchAdventure(c,s);\n      }\n    },\n    exit : () => {\n      if (!rooms.adventure.inAdventureMode)\n        currentRoom.draw.clear();\n      else\n        currentRoom.draw.hide();\n    },\n    click : (offsetX, offsetY) => {\n      if (rooms.adventure.clickHandler) {\n        rooms.adventure.clickHandler();\n      }\n    }\n  },\n  lobby : {\n    headerMessage : false,\n    draw : INNERDRAW.group(),\n    hexClickHandler : (offsetX, offsetY, hex) => {\n      if (currentRoom != rooms.lobby) return;\n      if (!buttonIsFree) return;\n      buttonIsFree = false;\n      var hexCoordinates = { x : hex.x, y : hex.y };\n      //console.log(hex);\n      if (hex.type == 'hero') {\n        for(var i = 0; i < playergrid.length; i++) {\n          if (playergrid[i].magni == false) {\n            playergrid[i].isPlayerHex = true;\n            playergrid[i].set(hex.magni, CONFIG.colors.hexBg);\n            hex.removeCard();\n            SOUND.select.play();\n            updateSelectedTeam();\n            break;\n          }         \n        }\n      } else if (hex.type == 'team'){\n        if (hex.magni !== false){\n          for(var i = 0; i < herogrid.length; i++) {\n            if (herogrid[i].magni == false) {\n              herogrid[i].set(hex.magni, CONFIG.colors.hexBg);\n              break;\n            }         \n          }\n          hex.removeCard();\n          SOUND.select.play();\n          updateSelectedTeam();\n        }\n      } else if (hex.type == 'special'){\n        var magnitomove = []\n        SOUND.select.play();\n        for(var i = 0; i < playergrid.length; i++) {\n          if (playergrid[i].magni !== false) {\n            magnitomove.push(playergrid[i].magni);\n            playergrid[i].removeCard();\n          } \n        }\n        if (magnitomove.length > 0) {\n          for(var i = 0; i < herogrid.length; i++) {\n            if (herogrid[i].magni == false) {\n              herogrid[i].set(magnitomove.pop(), CONFIG.colors.hexBg);\n              if (magnitomove.length == 0) break;\n            } \n          }\n        }\n        for(var i = 0; i < herogrid.length; i++) {\n          if (CONFIG.starters[hex.magni][1].indexOf(herogrid[i].magni[1].magni) >= 0) {\n            magnitomove.push(herogrid[i].magni);\n            herogrid[i].removeCard();\n            if (magnitomove.length == 10) break;\n          }\n        };\n        for(var i = 0; i < magnitomove.length; i++) {\n          playergrid[i].isPlayerHex = true;\n          playergrid[i].set(magnitomove[i], CONFIG.colors.hexBg);\n        };\n        updateSelectedTeam();\n      }\n      drawCurrentRating();\n      buttonIsFree = true;\n    },\n    gameMode : 0,\n    enter : (gm) => {\n      if (currentRoom) currentRoom.exit();\n      currentRoom = rooms.lobby;\n      currentRoom.draw.clear();\n      if (typeof gm != 'undefined' && gm !== false) rooms.lobby.gameMode = gm;\n      setBackground('assets/bgs/lobby.jpg');\n      drawMessage(\"Select your team!\");\n      \n      //Buttons\n      var playOnlineBtn, backBtn, cancelBtn;\n      if (rooms.lobby.gameMode == 0){\n        createButton(1020,10,150,40,'Start Adventure', function(){\n          if (isValidTeam()) {\n            rooms.adventure.enter(0,0);\n          } else {\n            alert(\"Please select a full team with a rating of 23 or less\");\n          }\n        });  \n      } else if (rooms.lobby.gameMode == 1){\n        createButton(1020,10,150,40,'Start Training', function(){\n          if (isValidTeam()) {\n            if (state != 'free') return;\n            showLoader();\n            ROTM.gamePractise(selectedTeam, updateGameState).then(() => {\n              rooms.game.enter();\n              SOUND.alert.play();\n              ROTM._stopPolling();\n              state = 'busy';\n            }).catch(e => {\n              state = 'free';\n              alert(e);\n            }).finally(() => {\n              hideLoader();\n            });\n          } else {\n            alert(\"Please select a full team with a rating of 23 or less\");\n          }\n        });        \n      } else if (rooms.lobby.gameMode == 2){\n        playOnlineBtn = createButton(1020,10,150,40,'Play Online', () => {\n          if (isValidTeam()) {\n            if (state != 'free') return;\n            showLoader();\n            ROTM.gameFind(selectedTeam, updateGameState).then(() => {\n              state = 'find';\n              drawMessage(\"Finding a match...\");\n              playOnlineBtn.hide();\n              backBtn.hide();\n              cancelBtn.show();\n            }).catch(e => {\n              alert(e);\n            }).finally(() => {\n              hideLoader();\n            });\n          } else {\n            alert(\"Please select a full team with a rating of 23 or less\");\n          }\n        });\n        cancelBtn = createButton(1020,60,150,40,'Cancel', () => {\n          showLoader();\n          ROTM.gameLeave().then(() => {\n            state = 'free';\n            drawMessage(\"Select your team!\");\n            cancelBtn.hide();\n            playOnlineBtn.show();\n            backBtn.show();\n          }).catch(e => {\n            alert(e);\n          }).finally(() => {\n            hideLoader();\n          });\n        });\n        cancelBtn.hide();\n        \n      }\n      \n      backBtn = createButton(1020,60,150,40,'Back', function(){\n        rooms.menu.enter();\n      });  \n      \n      selectedHex = false;\n      state = 'free';\n      herogrid.map((hex, i) => {\n        hex.init('hero', currentRoom.draw.group());\n        if (i < mymagni.length) {\n          if (selectedTeam.indexOf(mymagni[i]) < 0) hex.set(mymagni[i], CONFIG.colors.hexBg);\n        }\n      });\n      playergrid.map((hex, i) => {\n        hex.isPlayerHex = true;\n        hex.init('team', currentRoom.draw.group());\n        if (selectedTeam.length > i)\n          hex.set(selectedTeam[i], CONFIG.colors.hexBg);\n      });\n      premadegrid.map((hex, i) => {\n        hex.init('special', currentRoom.draw.group());\n        hex.special(CONFIG.starters[i][0], i);\n      });\n      drawCurrentRating()\n    },\n    click : (offsetX, offsetY) => {\n\n    },\n    exit : () => {\n      currentRoom.draw.clear();\n      currentRoom.headerMessage = false;\n      omd = false;\n      rd = false;\n    }\n  },\n  game : {\n    headerMessage : false,\n    draw : INNERDRAW.group(),\n    hexClickHandler : (offsetX, offsetY, hex) => {\n      if (gameState == 3) return;\n      var hexCoordinates = { x : hex.x, y : hex.y };\n      if (gameState == 0){\n        if (hex.type == 'team') {\n          selectedHex = hex;\n          selectedHex.highlight(CONFIG.colors.ally)\n          gameState = 1;\n          drawMessage(\"Waiting for other player...\");\n          ROTM.gameMove(selectedHex.magni);\n          SOUND.select.play();\n        }\n      } else if (gameState == 2){\n        if (isPlayersTurn){\n          if (hex.type == 'game') {\n            if (hex.player == 0){\n              if (selectedHex) {\n                ROTM.gameMove(selectedHex.magni, hex.index);\n                hex.isPlayerHex = true;\n                isPlayersTurn = false;\n                hex.place(currentPlayer, selectedHex.magni, CONFIG.colors.ally);\n                SOUND.place.play();\n                placeHex(hex, true);\n                selectedHex.clear();\n                drawMessage(\"Waiting for other player...\");\n              }\n            }\n          }\n          if (hex.type == 'team' && hex.magni !== false) {\n            if (selectedHex) selectedHex.unhighlight();\n            hex.highlight(CONFIG.colors.ally)\n            selectedHex = hex;\n            SOUND.select.play();\n          }\n        }\n      }\n    },\n    character : false,\n    board : false,\n    result : 0,\n    playerScore : 0,\n    opponentScore : 0,\n    enter : (bbt, bbfn, board, character) => {\n      if (currentRoom) currentRoom.exit();\n      currentRoom = rooms.game;\n      currentRoom.draw.clear();\n      localScore = [0,0];\n      bgmusic('battle');\n      setBackground('assets/bgs/arena.jpg');\n      selectedHex = false;\n      gameState = 0;\n      movesMade = 0;\n      if (character) rooms.game.character = character;\n      if (!bbt) bbt = \"Back\";\n      if (!bbfn) bbfn = (r) => {    \n        bgmusic('lobby');\n        ROTM.gameEnd();\n        rooms.lobby.enter()\n      };\n      if (!board) board = CONFIG.boards.standard;\n      gamegrid = Grid(board);\n      rooms.game.board = board;\n      rooms.game.backButton = createButton(1020,10,150,40, bbt, () => {\n        bbfn(rooms.game.result);\n      });\n      rooms.game.backButton.hide();\n      \n      //Draw game grid\n      gamegrid.map((hex, i) => {\n        hex.index = i;\n        hex.magni = false;\n        hex.player = 0;\n        hex.init('game', currentRoom.draw.group());\n      });\n      var c = 0;\n      playergrid.map(hex => {\n        hex.isPlayerHex = true;\n        hex.init('team', currentRoom.draw.group());\n        hex.set(selectedTeam[c++], CONFIG.colors.hexBg);\n      });\n      \n      //Reset variables\n      drawMessage(\"Game found - Select your Strike Unit\");\n    },\n    exit : () => {\n      currentRoom.draw.clear();\n      currentRoom.headerMessage = false;\n      st1 = false;\n      st2 = false;\n      omd = false;\n    }\n  }\n}\nwindow.rooms = rooms;\nwindow.ROTM = ROTM;\n\n\nwindow.SOUND = {\n  alert : new Howl({src: ['assets/sounds/alert.mp3']}),\n  battle : new Howl({src: ['assets/sounds/battle.wav']}),\n  lobby : new Howl({src: ['assets/sounds/lobby.wav']}),\n  lose : new Howl({src: ['assets/sounds/lose.wav']}),\n  place : new Howl({src: ['assets/sounds/place.wav']}),\n  select : new Howl({src: ['assets/sounds/select.mp3']}),\n  win : new Howl({src: ['assets/sounds/win.mp3']}),\n};\nSOUND.battle.volume(0.5);\nSOUND.alert.volume(0.2);\nSOUND.select.volume(0.4);\nSOUND.place.volume(0.1);\nSOUND.lose.volume(0.1);\nSOUND.win.volume(0.1);\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t296: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkrotm_v2\"] = self[\"webpackChunkrotm_v2\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [38], () => (__webpack_require__(5872)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}